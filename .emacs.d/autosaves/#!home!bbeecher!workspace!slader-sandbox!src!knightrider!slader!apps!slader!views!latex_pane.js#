// ==========================================================================
// Project:   Slader.LatexPopup
// Copyright: Â©2010 My Company, Inc.
// ==========================================================================
/*globals Slader */

/** @class

  (Document Your View Here)

  @extends SC.View
*/

Slader.LatexPane = SC.PickerPane.extend({
    layout: { width: 400, height: 200 },
    cellBinding : "Slader.selectedExplanationCellController.content",

    contentView: SC.TextFieldView.design({
        layout: { width: 400, height: 200 },
        valueBinding : "Slader.selectedExplanationCellController.content.latex",
        isTextArea: true,
    }),

    _updateCell : function(){
        var cell = this.get('cell')
        if (!cell || !(cell.get('status') & SC.Record.READY))
            return 
        cell.set('lastUpdate', new Date().getTime())
        cell.removeObserver("status", this, this._updateCell);
        cell.refresh()
    },

    remove: function(pane){
        this.syncCell()
        this.superclass();
    },
    
    syncCell: function(){
        var cell = this.get('cell')
        var latex =this.get('contentView').get('value')
        if (cell.get('id') === null){
            //create new cell
            cell = Slader.store.createRecord(Slader.ExplanationCell, { latex: latex,
                                                                       x : cell.get('x'),
                                                                       y : cell.get('y'),
                                                                     })
        }
        Slader.store.commitReocrd(Slader.ExplanationCell, cell.get('id'));
        cell.removeObserver("status", this, this._updateCell);
        cell.addObserver("status", this, this._updateCell);
    }    

});


Slader.ResultLatexPane = Slader.LatexPane.extend({
    cellBinding : "Slader.resultCellController.content",

    contentView: SC.TextFieldView.design({
        layout: { width: 400, height: 200 },
        valueBinding : "Slader.resultCellController.content.latex",
        isTextArea: true,
    }),

    _updateCell : function(){
        cell = this.get('cell')
        if (!cell || !(cell.get('status') & SC.Record.READY))
            return 
        cell.removeObserver("status", this, this._updateCell);
        Slader.resultCellController.set('lastUpdate', new Date().getTime())
        Slader.resultCellController.notifyPropertyChange('content')
    }

});

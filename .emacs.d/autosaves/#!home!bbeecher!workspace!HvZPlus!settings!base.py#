# -*- coding: utf-8 -*-
# Django settings for social pinax project.

import os.path
import posixpath
import pinax
import logging

PINAX_ROOT = os.path.abspath(os.path.dirname(pinax.__file__))
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

# tells Pinax to use the default theme
PINAX_THEME = 'default'

DEBUG = True
TEMPLATE_DEBUG = DEBUG

# tells Pinax to serve media through django.views.static.serve.
SERVE_MEDIA = DEBUG

ADMINS = (
    ('Ben Beecher', 'benbeecher@gmail.com'),
    ('Justin Quick', 'justquick@gmail.com'),
    ('Max Temkin', 'max.temkin@gmail.com'),
)

MANAGERS = ADMINS

DATABASE_ENGINE = 'sqlite3'    # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'ado_mssql'.
DATABASE_NAME = 'source'       # Or path to database file if using sqlite3.
DATABASE_USER = 'source'             # Not used with sqlite3.
DATABASE_PASSWORD = 'K39dfjLcZ32K93'         # Not used with sqlite3.
DATABASE_HOST = ''             # Set to empty string for localhost. Not used with sqlite3.
DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.

# Local time zone for this installation. Choices can be found here:
# http://www.postgresql.org/docs/8.1/static/datetime-keywords.html#DATETIME-TIMEZONE-SET-TABLE
# although not all variations may be possible on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'UTC'

# Language code for this installation. All choices can be found here:
# http://www.w3.org/TR/REC-html40/struct/dirlang.html#langcodes
# http://blogs.law.harvard.edu/tech/stories/storyReader$15
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = False

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')

# URL that handles the media served from MEDIA_ROOT.
# Example: "http://media.lawrence.com"
MEDIA_URL = '/media/'

# Absolute path to the directory that holds static files like app media.
# Example: "/home/media/media.lawrence.com/apps/"
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'media', 'static')

# URL that handles the static files like app media.
# Example: "http://media.lawrence.com"
STATIC_URL = '/media/static/'


# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = posixpath.join(STATIC_URL, "admin/")

# Make this unique, and don't share it with anybody.
SECRET_KEY = '%w+ffav=r#t#$z@604oyz%@0w%0r5r3e+xznh3k&07u)d4oqf)'

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'middleware.PlayerMiddleware',
    'django.middleware.doc.XViewMiddleware',
    'django_sorting.middleware.SortingMiddleware',
    'django.middleware.transaction.TransactionMiddleware',

    # satchmo
    'threaded_multihost.middleware.ThreadLocalMiddleware',
    #'satchmo_store.shop.SSLMiddleware.SSLRedirect',

)

ROOT_URLCONF = 'urls'

TEMPLATE_DIRS = (
    os.path.join(PROJECT_ROOT, "templates"),
    os.path.join(PINAX_ROOT, "templates", PINAX_THEME),
)

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    'django.core.context_processors.static',
    "django.core.context_processors.request",
    "pinax.core.context_processors.pinax_settings",
    #"satchmo_store.shop.context_processors.settings",

    "notification.context_processors.notification",
    #"messages.context_processors.inbox",
    #"context_processors.combined_inbox_count",
    "context_processors.footer",
    "context_processors.user_info",
)

COMBINED_INBOX_COUNT_SOURCES = (
    "messages.context_processors.inbox",
    "notification.context_processors.notification",
)

INSTALLED_APPS = (
    # included
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.contenttypes',
    'django.contrib.comments',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.humanize',
    'django.contrib.markup',
    'django.contrib.staticfiles',
    'django.contrib.databrowse',
    'pinax.templatetags',
    'pinax.apps.threadedcomments_extras',
    'pinax.apps.signup_codes',
    'pinax.apps.analytics',
    'pinax.apps.authsub',
    'pinax',
    # external
    'notification', # must be first
    'emailconfirmation',
    'django_extensions',
    'messages',
    'mailer',
    'south',
    'ajax_select',
    'template_utils',
    'smartif',
    'timezones',
    'ajax_validation',
    'uni_form',
    'django_sorting',
    'django_markup',
    'actstream',

     # satchmo
    'satchmo_store.shop',
    'app_plugins',
    'sorl.thumbnail',
    'keyedcache',
    'livesettings',
    'l10n',
    'satchmo_utils.thumbnail',
    #'satchmo_store.contact',
    'tax',
    'tax.modules.no',
    'tax.modules.area',
    'tax.modules.percent',
    'shipping',
    'product',
    'payment',
    'satchmo_ext.satchmo_toolbar',
    'satchmo_utils',
    'threaded_multihost',

    'avatar',
    'games',
    'api',
    'util',
    'profiles',

    'account',
    'piston',
    'groups',
    'kills',
    'picklefield',
    'tickets',
    'modadmin',
    'endless_pagination',
    'native_tags',
)

NATIVE_TAGS = (
    'util.tags',
)

ABSOLUTE_URL_OVERRIDES = {
    "auth.user": lambda o: "/players/%s/" % o.username,
}

MARKUP_FILTER_FALLBACK = 'none'
MARKUP_CHOICES = (
    ('restructuredtext', u'reStructuredText'),
    ('textile', u'Textile'),
    ('markdown', u'Markdown'),
    ('creole', u'Creole'),
)
WIKI_MARKUP_CHOICES = MARKUP_CHOICES

AUTH_PROFILE_MODULE = 'profiles.Profile'
NOTIFICATION_LANGUAGE_MODULE = 'account.Account'

ACCOUNT_OPEN_SIGNUP = True
ACCOUNT_REQUIRED_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = False

EMAIL_CONFIRMATION_DAYS = 2
EMAIL_DEBUG = DEBUG
SITE_NAME = "HvZ"
SITE_DOMAIN = 'hvzsource.com'
LOGIN_URL = "/account/login/"
LOGIN_REDIRECT_URLNAME = "home"

CONTACT_EMAIL = "hosting@hvzsource.com"
DEFAULT_FROM_EMAIL = "robot@humansvszombies.net"

AUTHENTICATION_BACKENDS = (
    'email_auth.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

INTERNAL_IPS = (
    '127.0.0.1',
)

ugettext = lambda s: s
LANGUAGES = (
    #('de', ugettext('German')),
    ('en', ugettext('English')),
)

# URCHIN_ID = "ua-..."
GOOGLE_MAPS_API_KEY = 'ABQIAAAAtGw1MDAVWMO6QjAEb2-w_hQCULP4XOMyhPd8d_NrQQEO8sT8XBR4nl1tfW8GUiQ2uIWU8ASwZR6mXA'
YAHOO_MAPS_API_KEY = ''

class NullStream(object):
    def write(*args, **kwargs):
        pass
    writeline = write
    writelines = write

RESTRUCTUREDTEXT_FILTER_SETTINGS = {
    'cloak_email_addresses': True,
    'file_insertion_enabled': False,
    'raw_enabled': False,
    'warning_stream': NullStream(),
    'strip_comments': True,
}

# if Django is running behind a proxy, we need to do things like use
# HTTP_X_FORWARDED_FOR instead of REMOTE_ADDR. This setting is used
# to inform apps of this fact
BEHIND_PROXY = False

FORCE_LOWERCASE_TAGS = True

FORCE_SCRIPT_NAME = ''

WIKI_REQUIRES_LOGIN = True

#turn off recaptcha for testing
RECAPTCHA_ON = False

RECAPTCHA_PUBLIC_KEY = "6LdmOQwAAAAAACdeGvFpCHf6h5FNCHJPSZIplBfU"
RECAPTCHA_PRIVATE_KEY = "6LdmOQwAAAAAAGyl38YFA6a3UIQ3SZvPKMjuVuNx"

# Uncomment this line after signing up for a Yahoo Maps API key at the
# following URL: https://developer.yahoo.com/wsregapp/
# YAHOO_MAPS_API_KEY = ''


# Satchmo specific settings
SATCHMO_SETTINGS = {
    'SHOP_BASE' : '/shop',
    'MULTISHOP' : False,
    #'SHOP_URLS' : patterns('satchmo_store.shop.views',)
}

# Hacky but it works - this is the product name that we look for to see if
# Someone purchased a plus account.
PLUS_ACCOUNT_PRODUCT_NAME = 'HvZ Plus'

# # not suitable for deployment, for testing only, for deployment strongly consider memcached.
# CACHE_BACKEND = "locmem:///"
# CACHE_TIMEOUT = 60*5
# CACHE_PREFIX = "Z"


#Configure logging
LOGFILE = os.path.join(PROJECT_ROOT, "satchmo.log")
logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
                    datefmt='%a, %d %b %Y %H:%M:%S',
                    filename=os.path.join(PROJECT_ROOT,LOGFILE),
                    filemode='a')

logging.getLogger('keyedcache').setLevel(logging.INFO)
logging.getLogger('l10n').setLevel(logging.INFO)
logging.info("Satchmo Started")


STATICFILES_DIRS = (MEDIA_ROOT,)

#for autocomplete
AJAX_LOOKUP_CHANNELS = {
    'zombies' : ('apps.profiles.lookups', 'ZombieLookup'),
}


SELENIUM_CONFIG = ("localhost", 4444, "*chrome", "http://localhost:8000/")
